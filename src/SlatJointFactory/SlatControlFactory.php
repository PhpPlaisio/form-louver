<?php
declare(strict_types=1);

namespace Plaisio\Form\SlatJointFactory;

use Plaisio\Form\Control\ComplexControl;
use Plaisio\Form\Control\Control;
use Plaisio\Form\Control\SlatControl;
use Plaisio\Form\SlatJoint\SlatJoint;
use Plaisio\Form\Table\LouverTable;
use Plaisio\Table\TableColumn\TableColumn;
use SetBased\Exception\LogicException;

/**
 * Abstract parent class for factories for creating slat controls.
 */
abstract class SlatControlFactory
{
  //--------------------------------------------------------------------------------------------------------------------
  /**
   * The slat joints.
   *
   * @var SlatJoint[]
   */
  protected array $slatJoints = [];

  /**
   * The overview table generated by this slat control factory.
   *
   * @var LouverTable
   */
  private LouverTable $table;

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * SlatControlFactory constructor.
   */
  public function __construct()
  {
    $this->table = new LouverTable();
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Adds a table column to the underlying table.
   *
   * @param TableColumn $column The column to be added to the underlying table.
   *
   * @return $this
   */
  public function addColumn(TableColumn $column): self
  {
    $this->table->addColumn($column);

    return $this;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Adds a slat joint (i.e. a column to the form) to this slat control factory and to the underlying table.
   *
   * @param SlatJoint $slatJoint The slat joint.
   *
   * @return $this
   */
  public function addSlatJoint(SlatJoint $slatJoint): self
  {
    $this->slatJoints[$slatJoint->getName()] = $slatJoint;
    $this->table->addColumn($slatJoint);

    return $this;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Creates a form control using a slat joint and returns the created form control.
   *
   * @param ComplexControl $parentControl The parent form control for the created form control.
   * @param string         $slatJointName The name of the slat joint.
   *
   * @return Control
   */
  public function createFormControl(ComplexControl $parentControl, string $slatJointName): Control
  {
    $control = $this->slatJoints[$slatJointName]->createControl($slatJointName);
    $parentControl->addFormControl($control);

    return $control;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Creates the form controls of a slat in a louver control.
   *
   * @param array $data An array from the nested arrays as set in LouverControl::setData.
   *
   * @return SlatControl
   */
  abstract public function createRow(array $data): SlatControl;

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Disables filtering.
   *
   * @return $this
   */
  public function disableFilter(): self
  {
    $this->table->disableFilter();

    return $this;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Enables filtering.
   *
   * @return $this
   */
  public function enableFilter(): self
  {
    $this->table->enableFilter();

    return $this;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Returns the number of columns in the underlying table of the louver form control.
   *
   * @return int
   */
  public function getNumberOfColumns(): int
  {
    return $this->table->getNumberOfColumns();
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Returns the 0-indexed ordinal of a slat joint in the underlying table of the louver form control.
   *
   * @param string $slatJointName The name of the slat joint.
   *
   * @return int
   *
   * @throws LogicException
   */
  public function getOrdinal(string $slatJointName): int
  {
    $ordinal = 0;
    $key     = null;
    foreach ($this->slatJoints as $key => $slatJoint)
    {
      if ($key===$slatJointName) break;

      $ordinal += $slatJoint->getColSpan();
    }

    if ($key!==$slatJointName)
    {
      throw new LogicException("SlatJoint '%s' not found.", $slatJointName);
    }

    return $ordinal;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Returns the underlying overview table.
   *
   * @return LouverTable
   */
  public function getTable(): LouverTable
  {
    return $this->table;
  }

  //--------------------------------------------------------------------------------------------------------------------
}

//----------------------------------------------------------------------------------------------------------------------
